<?php

/**
 * @file
 * Install, update and uninstall functions for the date_ical module.
 *
 */
/**
 * Implements hook_requirements().
 */
function date_ical_requirements($phase) {
  $requirements = array();
  
  // Ensure translations don't break at install time.
  $t = get_t();
  
  switch ($phase) {
    case 'runtime':
      $library = libraries_detect('iCalcreator');
      if ($library && !empty($library['installed'])) {
        $requirements['date_ical'] = array(
          'title' => $t('Date iCal'),
          'value' => $t('iCalcreator library is installed, version: @version found', array('@version' => $library['version'])),
          'severity' => REQUIREMENT_OK,
        );
      }
      else {
        $requirements['date_ical'] = array(
          'title' => $t('Date iCal'),
          'value' => $t('iCalcreator library could not be found, check the installation instructions for the Date iCal module.'),
          'description' => $t('The error message was: @error<br>!error_message',
            array('@error' => $library['error'], '!error_message' => $library['error message'])
          ),
          'severity' => REQUIREMENT_ERROR,
        );
      }
      break;
  }
  
  return $requirements;
}

/**
 * Implementation of hook_enable().
 */
function date_ical_enable() {
  cache_clear_all('plugins:feeds:plugins', 'cache');
}

/*****************************************************************************
 *                              UPDATE HOOKS
 ****************************************************************************/

/**
 * Migrates all iCal feed importers for from Date iCal 2.x to 3.0.
 * <br>
 * PLEASE NOTE: If any of your importers are defined by Features, you'll need
 * to update their feature(s) to match.
 */
function date_ical_update_7300() {
  // Rebuild the registry immediately, so that we don't get fatal errors when
  // Drupal attempts to instantiate the old feeds plugin classes.
  registry_rebuild();
  cache_clear_all('plugins:feeds:plugins', 'cache');
  
  // Update all the importers which used DateIcalIcalcreatorParser to use
  // DateiCalFeedsParser instead.
  $importer_data = ctools_export_load_object('feeds_importer', 'all');
  foreach ($importer_data as $key => $value) {
    $importer = feeds_importer($key);
    $config = $importer->getConfig();
    if ($config['parser']['plugin_key'] == 'DateIcalIcalcreatorParser') {
      $importer->setPlugin('DateiCalFeedsParser');
      
      // Update the mappings: the source keys are now capitalized.
      $processor = $importer->processor;
      $processor_config = $processor->getconfig();
      foreach ($processor_config['mappings'] as &$mapping) {
        $mapping['source'] = strtoupper($mapping['source']);
      }
      $processor->setConfig($processor_config);
      
      $importer->save();
      
      // When this importer object got created, a warning was issued about its
      // parser plugin being missing. We corrected that warning above, so we
      // should clear it out to avoid potential confusion.
      $messages = drupal_get_messages('warning');
      foreach($messages['warning'] as $warning) {
        // Calling drupal_get_messages() removed *every* warning from the
        // message queue, so we need to re-issue any warnings that aren't
        // about missing Feeds plugins.
        if (strpos($warning, 'Missing Feeds plugin') === FALSE) {
          drupal_set_message($warning, 'warning');
        }
      }
      $t = get_t();
      $importer_link = l($key, "admin/structure/feeds/$key");
      drupal_set_message($t('Date iCal updated the parser plugin for !importer.
        If that importer is defined by a feature, you will need to update that feature to match.', array('!importer' => $importer_link))
      );
    }
  }
}
